import{_ as a,p as t,q as i,t as o,s as n,R as s,$ as c,n as p}from"./framework-c873e247.js";const l={},r=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,"If the website as a whole or a document is private and does not want to be made public, you can only enter the content page after filling in the key login (login is invalid after closing the browser tab)."),n("ul",null,[n("li",null,"the number of passwords can only be 6 characters."),n("li",null,"multiple passwords can be set through an array.")])],-1),d=n("h2",{id:"obtaining-ciphertext",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#obtaining-ciphertext","aria-hidden":"true"},"#"),s(" Obtaining Ciphertext")],-1),u=n("p",null,[s("If your password is "),n("code",null,"123456"),s(", you need to convert it into ciphertext, that is, "),n("code",null,"e10adc3949ba59abbe56e057f20f883e"),s(", use ciphertext to set the password.")],-1),m=n("p",null,[s("After the website is released, enter "),n("code",null,"123456"),s(" in the password input box to enter the website, and others cannot know your password through the ciphertext in the code, but you must remember your password in plaintext.")],-1),h=n("p",null,"Please enter the password plaintext in the input box below to get the corresponding ciphertext:",-1),b=c(`<h2 id="set-encryption" tabindex="-1"><a class="header-anchor" href="#set-encryption" aria-hidden="true">#</a> Set Encryption</h2><h3 id="encrypt-the-e-entire-website" tabindex="-1"><a class="header-anchor" href="#encrypt-the-e-entire-website" aria-hidden="true">#</a> Encrypt The e=Entire Website</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> recoTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress-theme-reco&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token function">recoTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// set a single password</span>
    password<span class="token operator">:</span> <span class="token string">&#39;14e1b600b1fd579f47433b88e8d85291&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// set multiple passwords</span>
    password<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;14e1b600b1fd579f47433b88e8d85291&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;f8de1968939dd4ac5992ce962993ac2b&#39;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="encrypting-a-single-page" tabindex="-1"><a class="header-anchor" href="#encrypting-a-single-page" aria-hidden="true">#</a> Encrypting A Single Page</h3><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> xxx
<span class="token comment"># set a single password</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> 14e1b600b1fd579f47433b88e8d85291
<span class="token comment"># set multiple passwords</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> 
 <span class="token punctuation">-</span> 14e1b600b1fd579f47433b88e8d85291
 <span class="token punctuation">-</span> f8de1968939dd4ac5992ce962993ac2b</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function v(k,g){const e=p("md5");return t(),i("div",null,[r,d,u,m,h,o(e),b])}const f=a(l,[["render",v],["__file","password.html.vue"]]);export{f as default};
